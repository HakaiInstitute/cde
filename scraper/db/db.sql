CREATE schema cioos_api;
CREATE TABLE cioos_api.servers (pk SERIAL PRIMARY KEY, url TEXT UNIQUE);
-- from CSV: ,erddap_url,dataset_id,cdm_data_type,dataset_standard_names
CREATE TABLE cioos_api.datasets (
    pk SERIAL PRIMARY KEY,
    dataset_id TEXT,
    -- server_pk INTEGER REFERENCES cioos_api.servers(pk),
    erddap_url TEXT REFERENCES cioos_api.servers(url),
    cdm_data_type TEXT,
    dataset_standard_names TEXT [],
    UNIQUE(dataset_id, erddap_url)
);
-- from csv: server,dataset_id,time_min,time_max,latitude_min,latitude_max,longitude_min,longitude_max
DROP TABLE IF EXISTS cioos_api.profiles;
CREATE TABLE IF NOT EXISTS cioos_api.profiles (
    pk SERIAL PRIMARY KEY,
    geom geometry,
    dataset_pk INTEGER REFERENCES cioos_api.datasets(pk),
    server_pk INTEGER REFERENCES cioos_api.servers(pk),
    erddap_url TEXT,
    dataset_id TEXT,
    time_min TEXT,
    time_max TEXT,
    latitude_min FLOAT,
    latitude_max FLOAT,
    longitude_min FLOAT,
    longitude_max FLOAT,
);
-- DDL generated by Postico 1.5.17
-- Not all database features are supported. Do not use for backup.
-- Table Definition ----------------------------------------------
-- DROP VIEW cioos_api.combined
CREATE VIEW cioos_api.combined AS
SELECT profiles.pk,
    profiles.time_min,
    profiles.time_max,
    profiles.latitude_min,
    profiles.latitude_max,
    profiles.longitude_min,
    profiles.longitude_max,
    profiles.geom,
    datasets.dataset_id,
    datasets.erddap_url,
    datasets.cdm_data_type,
    datasets.dataset_standard_names,
    profiles.latitude_min = profiles.latitude_max
    AND profiles.longitude_min = profiles.longitude_max AS is_point
FROM cioos_api.profiles
    LEFT JOIN cioos_api.datasets ON datasets.pk = profiles.dataset_pk
    LEFT JOIN cioos_api.servers ON servers.url = datasets.erddap_url;
CREATE TABLE points1(
    gid SERIAL PRIMARY KEY,
    geom GEOMETRY(POINT, 4326)
);
CREATE TABLE points2(
    gid SERIAL PRIMARY KEY,
    geom GEOMETRY(POINT, 4326)
);
update cioos_api.profiles
set geom = ST_MakePoint(longitude_min, latitude_min);
insert into public.points1
select pk,
    ST_SetSRID(geom, 4326)
from cioos_api.combined c
where c.cdm_data_type in ('Profile', 'TimeSeriesProfile');
insert into public.points2
select pk,
    ST_SetSRID(geom, 4326)
from cioos_api.combined c
where c.cdm_data_type not in ('Profile', 'TimeSeriesProfile');
CREATE TABLE points1(
    gid SERIAL PRIMARY KEY,
    geom GEOMETRY(POINT, 4326)
);

-- insert a million random points
insert into points1 (geom)
select geom
from (
        SELECT generate_series(1, 1000000) AS id,
            ST_SetSRID(
                ST_MakePoint(random() * 360 -180, random() * 360 -180),
                4326
            ) AS geom
    ) asd;